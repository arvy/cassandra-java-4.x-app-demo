/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cassandra.java.app.demo;


import com.codahale.metrics.MetricRegistry;
import com.codahale.metrics.Slf4jReporter;
import com.codahale.metrics.jmx.JmxReporter;
import com.datastax.oss.driver.api.core.CqlSession;
import com.datastax.oss.driver.api.core.cql.*;
import com.datastax.oss.protocol.internal.request.Batch;
import com.typesafe.config.Config;
import com.typesafe.config.ConfigFactory;
import org.apache.commons.lang3.RandomStringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.net.InetSocketAddress;
import java.util.Arrays;
import java.util.HashSet;
import java.util.concurrent.TimeUnit;

public class App4x  {

    public static final Logger logger = LoggerFactory.getLogger(App4x.class);
    public String getGreeting() {
        return "Hello World!";
    }
    public static void main(String[] args) throws InterruptedException {

        Config config = ConfigFactory.load();

        try(CqlSession session = CqlSession.builder().build() ){

            Statement statement = new SimpleStatementBuilder("select broadcast_address, listen_address, native_transport_address from system.local").build();
            while(true) {

                ResultSet rs  = session.execute(statement);    // (3)
                logger.info("Coordinator: {}", rs.getExecutionInfo().getCoordinator().toString());
                Row row = rs.one();
                logger.info("Listen address {}", row.getString("listen_address"));                          // (4)
                Thread.sleep(3000L);
            }
        }

    }
}
